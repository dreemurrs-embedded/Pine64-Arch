From: Sebastian Krzyszkowiak <sebastian.krzyszkowiak@puri.sm>
Date: Thu, 23 Sep 2021 14:03:14 +0200
Subject: GsUpdatesSection: Always present "Download" button before "Restart &
 Update"

"prepared-update" can get removed when refreshing package lists,
in which case an update attempt will fail. Re-requesting the download
is enough to recreate the update package, so presenting "download"
option to the user even if everything is already downloaded before
allowing them to actually trigger the update should workaround this
problem.

Closes #40
---
 src/gs-updates-section.c | 13 ++++++++++---
 1 file changed, 10 insertions(+), 3 deletions(-)

diff --git a/src/gs-updates-section.c b/src/gs-updates-section.c
index 0f41ba6..4078032 100644
--- a/src/gs-updates-section.c
+++ b/src/gs-updates-section.c
@@ -47,6 +47,7 @@ struct _GsUpdatesSection
 	GtkSizeGroup		*sizegroup_button_image;
 	GtkSizeGroup		*sizegroup_header;
 	gboolean		 is_narrow;
+	gboolean		 downloaded;
 };
 
 G_DEFINE_TYPE (GsUpdatesSection, gs_updates_section, GTK_TYPE_BOX)
@@ -312,7 +313,7 @@ _update_buttons (GsUpdatesSection *self)
 
 	if (self->kind == GS_UPDATES_SECTION_KIND_OFFLINE_FIRMWARE ||
 	    self->kind == GS_UPDATES_SECTION_KIND_OFFLINE) {
-		if (_all_offline_updates_downloaded (self))
+		if (_all_offline_updates_downloaded (self) && self->downloaded)
 			gtk_stack_set_visible_child_name (GTK_STACK (self->button_stack), "update");
 		else
 			gtk_stack_set_visible_child_name (GTK_STACK (self->button_stack), "download");
@@ -386,11 +387,15 @@ _download_finished_cb (GObject *object, GAsyncResult *res, gpointer user_data)
 	g_autoptr(GError) error = NULL;
 	g_autoptr(GsAppList) list = NULL;
 
+	self->downloaded = TRUE;
+
 	/* get result */
 	list = gs_plugin_loader_job_process_finish (GS_PLUGIN_LOADER (object), res, &error);
 	if (list == NULL) {
-		if (!g_error_matches (error, GS_PLUGIN_ERROR, GS_PLUGIN_ERROR_CANCELLED))
+		if (!g_error_matches (error, GS_PLUGIN_ERROR, GS_PLUGIN_ERROR_CANCELLED)) {
 			g_warning ("failed to download updates: %s", error->message);
+			self->downloaded = FALSE;
+		}
 	}
 
 	g_clear_object (&self->cancellable);
@@ -494,7 +499,9 @@ _app_row_activated_cb (GsUpdatesSection *self, GtkListBoxRow *row)
 static void
 gs_updates_section_show (GtkWidget *widget)
 {
-	_update_buttons (GS_UPDATES_SECTION (widget));
+	GsUpdatesSection *self = GS_UPDATES_SECTION (widget);
+	self->downloaded = FALSE;
+	_update_buttons (self);
 
 	GTK_WIDGET_CLASS (gs_updates_section_parent_class)->show (widget);
 }
