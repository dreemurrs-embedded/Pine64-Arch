From: Julian Sparber <julian@sparber.net>
Date: Thu, 24 Oct 2019 10:30:09 +0200
Subject: Add DBus API for adding contact with preset properties

The API takes an array of (key, value) pairs.

Supported keys:

These can be specified multiple times:
  "email-addresses", "notes", "phone-numbers"

Only the last will be stored (because this properies are unique):
"alias", "full-name", "nickname"

Not all properites are supported for now because they can't be easily
set via DBus because they arn't a string

Example DBus usage:

gdbus call --session --dest org.gnome.Contacts --object-path  /org/gnome/Contacts --method org.gtk.Actions.Activate 'new-contact-data' '[<[("email-addresses", "julian@sparber.net"), ("phone-numbers", "+39333333"), ("email-addresses", "secondo@example.com")]>]' '{}'

Upstream: https://gitlab.gnome.org/GNOME/gnome-contacts/-/merge_requests/95
---
 data/ui/contacts-main-window.ui     |  2 +-
 src/contacts-app.vala          | 68 ++++++++++++++++++++++++++++++++++++++++--
 src/contacts-contact-pane.vala |  3 +-
 src/contacts-main-window.vala       | 30 +++++++++----------
 4 files changed, 82 insertions(+), 21 deletions(-)

diff --git a/data/ui/contacts-main-window.ui b/data/ui/contacts-main-window.ui
index 137fe68..e9ad835 100644
--- a/data/ui/contacts-main-window.ui
+++ b/data/ui/contacts-main-window.ui
@@ -169,7 +169,7 @@
                     <property name="halign">center</property>
                     <property name="valign">center</property>
                     <property name="tooltip_text" translatable="yes">Create new contact</property>
-                    <signal name="clicked" handler="new_contact" object="ContactsMainWindow" after="no" swapped="no"/>
+                    <property name="action-name">app.new-contact</property>
                     <child internal-child="accessible">
                       <object class="AtkObject" id="add_button_atkobject">
                         <property name="AtkObject::accessible-name" translatable="yes">Add contact</property>
diff --git a/src/contacts-app.vala b/src/contacts-app.vala
index 082449a..f472cc4 100644
--- a/src/contacts-app.vala
+++ b/src/contacts-app.vala
@@ -15,6 +15,9 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
 
+using Gtk;
+using Gee;
+using Hdy;
 using Folks;
 
 public class Contacts.App : Gtk.Application {
@@ -30,7 +33,8 @@ public class Contacts.App : Gtk.Application {
     { "about",            show_about          },
     { "change-book",      change_address_book },
     { "online-accounts",  online_accounts     },
-    { "new-contact",      new_contact         },
+    { "new-contact",      on_new_contact      },
+    { "new-contact-data", on_new_contact,  "a(ss)" },
     { "show-contact",     on_show_contact, "s"}
   };
 
@@ -293,8 +297,66 @@ public class Contacts.App : Gtk.Application {
     setup_window.show ();
   }
 
-  public void new_contact () {
-    this.window.new_contact ();
+  private void on_new_contact (SimpleAction action, Variant? param) {
+    HashTable<string, Value?> details = null;
+    if (param != null)
+      details = array_to_details (param);
+
+    if (window == null)
+      create_window ();
+
+     window.present ();
+     window.new_contact (details);
+  }
+
+  private void add_field_details<T> (HashTable<string, Value?> details, string key, string value) {
+    var val = details.get(key);
+    Set<T> current = (val != null) ? (Set<T>) details.get(key): null;
+
+    if (current == null) {
+      current = new HashSet<T> ();
+      details.set (key, current);
+    }
+    // WORKAROUND: This is a workaround for https://gitlab.gnome.org/GNOME/vala/issues/871
+    var obj = Object.new (typeof (T),
+                          "t-type", typeof(string),
+                          "t-dup-func", string.dup,
+                          "t-destroy-func", free,
+                          "value", value);
+    current.add (obj);
+  }
+
+  /* This converts a array of (key, value) to HashTable details expected by folks */
+  /* Todo: implement all property, currently only a couple of properties can be set via dbus */
+  private HashTable<string, Value?> array_to_details (Variant param) {
+    var details = new HashTable<string, Value?> (str_hash, str_equal);
+    foreach (Variant item in param) {
+      string? key = item.get_child_value(0) as string;
+      string? value = item.get_child_value(1) as string;
+      if (key == null || value == null)
+        continue;
+
+      switch (key) {
+        case "alias":
+        case "full-name":
+        case "nickname":
+          details.set (key, value);
+          break;
+        case "email-addresses":
+          add_field_details<EmailFieldDetails> (details, key, value);
+          break;
+        case "notes":
+          add_field_details<NoteFieldDetails> (details, key, value);
+          break;
+        case "phone-numbers":
+          add_field_details<PhoneFieldDetails> (details, key, value);
+          break;
+        default:
+          warning ("Not implemented or unknown property '%s'", key);
+          break;
+      }
+    }
+    return details;
   }
 
   private void on_show_contact(SimpleAction action, Variant? param) {
diff --git a/src/contacts-contact-pane.vala b/src/contacts-contact-pane.vala
index 458d91a..60e5ffd 100644
--- a/src/contacts-contact-pane.vala
+++ b/src/contacts-contact-pane.vala
@@ -203,8 +203,7 @@ public class Contacts.ContactPane : Gtk.ScrolledWindow {
     start_editing ();
   }
 
-  public void new_contact () {
-    var details = new HashTable<string, Value?> (str_hash, str_equal);
+  public void new_contact (HashTable<string, Value?> details) {
     string[] writeable_properties;
     // TODO: make sure we have a primary_store
     if (this.store.aggregator.primary_store != null) {
diff --git a/src/contacts-main-window.vala b/src/contacts-main-window.vala
index 2386eea..3612901 100644
--- a/src/contacts-main-window.vala
+++ b/src/contacts-main-window.vala
@@ -373,21 +373,6 @@ public class Contacts.Window : Hdy.ApplicationWindow {
     }
   }
 
-  [GtkCallback]
-  public void new_contact () {
-    if (this.state == UiState.UPDATING || this.state == UiState.CREATING)
-      return;
-
-    this.list_pane.select_contact (null);
-
-    this.state = UiState.CREATING;
-
-    this.right_header.title = _("New Contact");
-
-    this.contact_pane.new_contact ();
-    show_contact_pane ();
-  }
-
   [GtkCallback]
   private void on_cancel_visible () {
     update_header ();
@@ -412,6 +397,21 @@ public class Contacts.Window : Hdy.ApplicationWindow {
         this.header.visible_child == this.right_header;
   }
 
+  public void new_contact (HashTable<string, Value?>? details = null) {
+    if (this.state == UiState.UPDATING || this.state == UiState.CREATING)
+      return;
+
+    this.list_pane.select_contact (null);
+
+    this.state = UiState.CREATING;
+
+    this.right_header.title = _("New Contact");
+
+    this.contact_pane.new_contact (
+      (details != null) ? details: new HashTable<string, Value?> (str_hash, str_equal));
+    show_contact_pane ();
+  }
+
   private void show_list_pane () {
     content_box.visible_child_name = "list-pane";
     update_header ();
